// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RegisterInfoDTO object sending id service to register yourself
//
// swagger:model RegisterInfoDTO
type RegisterInfoDTO struct {

	// id sending new id information (new userId or some other userId)
	// Required: true
	DistributingUserID *string `json:"distributing_user_id"`

	// new userId endpoint
	// Required: true
	Endpoint *string `json:"endpoint"`

	// new userId id, check if Distributing user is also new one to notify others if so
	// Required: true
	NewUserID *string `json:"new_user_id"`
}

// Validate validates this register info d t o
func (m *RegisterInfoDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDistributingUserID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEndpoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNewUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RegisterInfoDTO) validateDistributingUserID(formats strfmt.Registry) error {

	if err := validate.Required("distributing_user_id", "body", m.DistributingUserID); err != nil {
		return err
	}

	return nil
}

func (m *RegisterInfoDTO) validateEndpoint(formats strfmt.Registry) error {

	if err := validate.Required("endpoint", "body", m.Endpoint); err != nil {
		return err
	}

	return nil
}

func (m *RegisterInfoDTO) validateNewUserID(formats strfmt.Registry) error {

	if err := validate.Required("new_user_id", "body", m.NewUserID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RegisterInfoDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegisterInfoDTO) UnmarshalBinary(b []byte) error {
	var res RegisterInfoDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
